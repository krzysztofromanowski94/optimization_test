// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protomessage.proto

/*
Package protomessage is a generated protocol buffer package.

It is generated from these files:
	protomessage.proto

It has these top-level messages:
	Oneof
	AskDummy
	TBResults
	AskHistory
	HistoryPage
	History
	AgentType
	ResultType
	ReturnType
*/
package protomessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Oneof struct {
	// Types that are valid to be assigned to Union:
	//	*Oneof_Result
	//	*Oneof_Agent
	//	*Oneof_Return
	Union isOneof_Union `protobuf_oneof:"union"`
}

func (m *Oneof) Reset()                    { *m = Oneof{} }
func (m *Oneof) String() string            { return proto.CompactTextString(m) }
func (*Oneof) ProtoMessage()               {}
func (*Oneof) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isOneof_Union interface {
	isOneof_Union()
}

type Oneof_Result struct {
	Result *ResultType `protobuf:"bytes,1,opt,name=result,oneof"`
}
type Oneof_Agent struct {
	Agent *AgentType `protobuf:"bytes,2,opt,name=agent,oneof"`
}
type Oneof_Return struct {
	Return *ReturnType `protobuf:"bytes,3,opt,name=return,oneof"`
}

func (*Oneof_Result) isOneof_Union() {}
func (*Oneof_Agent) isOneof_Union()  {}
func (*Oneof_Return) isOneof_Union() {}

func (m *Oneof) GetUnion() isOneof_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (m *Oneof) GetResult() *ResultType {
	if x, ok := m.GetUnion().(*Oneof_Result); ok {
		return x.Result
	}
	return nil
}

func (m *Oneof) GetAgent() *AgentType {
	if x, ok := m.GetUnion().(*Oneof_Agent); ok {
		return x.Agent
	}
	return nil
}

func (m *Oneof) GetReturn() *ReturnType {
	if x, ok := m.GetUnion().(*Oneof_Return); ok {
		return x.Return
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Oneof) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Oneof_OneofMarshaler, _Oneof_OneofUnmarshaler, _Oneof_OneofSizer, []interface{}{
		(*Oneof_Result)(nil),
		(*Oneof_Agent)(nil),
		(*Oneof_Return)(nil),
	}
}

func _Oneof_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Oneof)
	// union
	switch x := m.Union.(type) {
	case *Oneof_Result:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *Oneof_Agent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Agent); err != nil {
			return err
		}
	case *Oneof_Return:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Return); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Oneof.Union has unexpected type %T", x)
	}
	return nil
}

func _Oneof_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Oneof)
	switch tag {
	case 1: // union.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResultType)
		err := b.DecodeMessage(msg)
		m.Union = &Oneof_Result{msg}
		return true, err
	case 2: // union.agent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AgentType)
		err := b.DecodeMessage(msg)
		m.Union = &Oneof_Agent{msg}
		return true, err
	case 3: // union.return
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReturnType)
		err := b.DecodeMessage(msg)
		m.Union = &Oneof_Return{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Oneof_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Oneof)
	// union
	switch x := m.Union.(type) {
	case *Oneof_Result:
		s := proto.Size(x.Result)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Oneof_Agent:
		s := proto.Size(x.Agent)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Oneof_Return:
		s := proto.Size(x.Return)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AskDummy struct {
}

func (m *AskDummy) Reset()                    { *m = AskDummy{} }
func (m *AskDummy) String() string            { return proto.CompactTextString(m) }
func (*AskDummy) ProtoMessage()               {}
func (*AskDummy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TBResults struct {
	ResultsId          uint64  `protobuf:"varint,1,opt,name=results_id,json=resultsId" json:"results_id,omitempty"`
	TestFunctionsName  string  `protobuf:"bytes,2,opt,name=test_functions_name,json=testFunctionsName" json:"test_functions_name,omitempty"`
	TestFunctionsCode  string  `protobuf:"bytes,3,opt,name=test_functions_code,json=testFunctionsCode" json:"test_functions_code,omitempty"`
	ResultsAgentAmount uint64  `protobuf:"varint,4,opt,name=results_agent_amount,json=resultsAgentAmount" json:"results_agent_amount,omitempty"`
	BestFitness        float64 `protobuf:"fixed64,5,opt,name=best_fitness,json=bestFitness" json:"best_fitness,omitempty"`
	Steps              uint64  `protobuf:"varint,6,opt,name=steps" json:"steps,omitempty"`
	Borders            string  `protobuf:"bytes,7,opt,name=borders" json:"borders,omitempty"`
	ResultDate         string  `protobuf:"bytes,8,opt,name=result_date,json=resultDate" json:"result_date,omitempty"`
}

func (m *TBResults) Reset()                    { *m = TBResults{} }
func (m *TBResults) String() string            { return proto.CompactTextString(m) }
func (*TBResults) ProtoMessage()               {}
func (*TBResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TBResults) GetResultsId() uint64 {
	if m != nil {
		return m.ResultsId
	}
	return 0
}

func (m *TBResults) GetTestFunctionsName() string {
	if m != nil {
		return m.TestFunctionsName
	}
	return ""
}

func (m *TBResults) GetTestFunctionsCode() string {
	if m != nil {
		return m.TestFunctionsCode
	}
	return ""
}

func (m *TBResults) GetResultsAgentAmount() uint64 {
	if m != nil {
		return m.ResultsAgentAmount
	}
	return 0
}

func (m *TBResults) GetBestFitness() float64 {
	if m != nil {
		return m.BestFitness
	}
	return 0
}

func (m *TBResults) GetSteps() uint64 {
	if m != nil {
		return m.Steps
	}
	return 0
}

func (m *TBResults) GetBorders() string {
	if m != nil {
		return m.Borders
	}
	return ""
}

func (m *TBResults) GetResultDate() string {
	if m != nil {
		return m.ResultDate
	}
	return ""
}

type AskHistory struct {
	ResultId uint64 `protobuf:"varint,1,opt,name=result_id,json=resultId" json:"result_id,omitempty"`
	Step     int64  `protobuf:"varint,2,opt,name=step" json:"step,omitempty"`
}

func (m *AskHistory) Reset()                    { *m = AskHistory{} }
func (m *AskHistory) String() string            { return proto.CompactTextString(m) }
func (*AskHistory) ProtoMessage()               {}
func (*AskHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AskHistory) GetResultId() uint64 {
	if m != nil {
		return m.ResultId
	}
	return 0
}

func (m *AskHistory) GetStep() int64 {
	if m != nil {
		return m.Step
	}
	return 0
}

type HistoryPage struct {
	Agent []*AgentType `protobuf:"bytes,1,rep,name=agent" json:"agent,omitempty"`
	Step  uint64       `protobuf:"varint,2,opt,name=step" json:"step,omitempty"`
}

func (m *HistoryPage) Reset()                    { *m = HistoryPage{} }
func (m *HistoryPage) String() string            { return proto.CompactTextString(m) }
func (*HistoryPage) ProtoMessage()               {}
func (*HistoryPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HistoryPage) GetAgent() []*AgentType {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *HistoryPage) GetStep() uint64 {
	if m != nil {
		return m.Step
	}
	return 0
}

type History struct {
	ResultId uint64  `protobuf:"varint,1,opt,name=result_id,json=resultId" json:"result_id,omitempty"`
	X        float64 `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y        float64 `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	Fitness  float64 `protobuf:"fixed64,4,opt,name=fitness" json:"fitness,omitempty"`
	Step     uint64  `protobuf:"varint,5,opt,name=step" json:"step,omitempty"`
}

func (m *History) Reset()                    { *m = History{} }
func (m *History) String() string            { return proto.CompactTextString(m) }
func (*History) ProtoMessage()               {}
func (*History) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *History) GetResultId() uint64 {
	if m != nil {
		return m.ResultId
	}
	return 0
}

func (m *History) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *History) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *History) GetFitness() float64 {
	if m != nil {
		return m.Fitness
	}
	return 0
}

func (m *History) GetStep() uint64 {
	if m != nil {
		return m.Step
	}
	return 0
}

type AgentType struct {
	X       float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y       float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Fitness float64 `protobuf:"fixed64,3,opt,name=fitness" json:"fitness,omitempty"`
	Step    uint64  `protobuf:"varint,4,opt,name=step" json:"step,omitempty"`
	Best    bool    `protobuf:"varint,5,opt,name=best" json:"best,omitempty"`
}

func (m *AgentType) Reset()                    { *m = AgentType{} }
func (m *AgentType) String() string            { return proto.CompactTextString(m) }
func (*AgentType) ProtoMessage()               {}
func (*AgentType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AgentType) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *AgentType) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *AgentType) GetFitness() float64 {
	if m != nil {
		return m.Fitness
	}
	return 0
}

func (m *AgentType) GetStep() uint64 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *AgentType) GetBest() bool {
	if m != nil {
		return m.Best
	}
	return false
}

type ResultType struct {
	TestFunc    string `protobuf:"bytes,1,opt,name=testFunc" json:"testFunc,omitempty"`
	AgentAmount uint64 `protobuf:"varint,2,opt,name=agentAmount" json:"agentAmount,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	Borders     string `protobuf:"bytes,4,opt,name=borders" json:"borders,omitempty"`
}

func (m *ResultType) Reset()                    { *m = ResultType{} }
func (m *ResultType) String() string            { return proto.CompactTextString(m) }
func (*ResultType) ProtoMessage()               {}
func (*ResultType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ResultType) GetTestFunc() string {
	if m != nil {
		return m.TestFunc
	}
	return ""
}

func (m *ResultType) GetAgentAmount() uint64 {
	if m != nil {
		return m.AgentAmount
	}
	return 0
}

func (m *ResultType) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ResultType) GetBorders() string {
	if m != nil {
		return m.Borders
	}
	return ""
}

type ReturnType struct {
	Good    bool   `protobuf:"varint,1,opt,name=good" json:"good,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ReturnType) Reset()                    { *m = ReturnType{} }
func (m *ReturnType) String() string            { return proto.CompactTextString(m) }
func (*ReturnType) ProtoMessage()               {}
func (*ReturnType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReturnType) GetGood() bool {
	if m != nil {
		return m.Good
	}
	return false
}

func (m *ReturnType) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Oneof)(nil), "protomessage.Oneof")
	proto.RegisterType((*AskDummy)(nil), "protomessage.AskDummy")
	proto.RegisterType((*TBResults)(nil), "protomessage.TBResults")
	proto.RegisterType((*AskHistory)(nil), "protomessage.AskHistory")
	proto.RegisterType((*HistoryPage)(nil), "protomessage.HistoryPage")
	proto.RegisterType((*History)(nil), "protomessage.History")
	proto.RegisterType((*AgentType)(nil), "protomessage.AgentType")
	proto.RegisterType((*ResultType)(nil), "protomessage.ResultType")
	proto.RegisterType((*ReturnType)(nil), "protomessage.ReturnType")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OptimizationTest service

type OptimizationTestClient interface {
	NewResult(ctx context.Context, opts ...grpc.CallOption) (OptimizationTest_NewResultClient, error)
	GetResults(ctx context.Context, in *AskDummy, opts ...grpc.CallOption) (OptimizationTest_GetResultsClient, error)
	GetHistory(ctx context.Context, opts ...grpc.CallOption) (OptimizationTest_GetHistoryClient, error)
}

type optimizationTestClient struct {
	cc *grpc.ClientConn
}

func NewOptimizationTestClient(cc *grpc.ClientConn) OptimizationTestClient {
	return &optimizationTestClient{cc}
}

func (c *optimizationTestClient) NewResult(ctx context.Context, opts ...grpc.CallOption) (OptimizationTest_NewResultClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_OptimizationTest_serviceDesc.Streams[0], c.cc, "/protomessage.OptimizationTest/NewResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &optimizationTestNewResultClient{stream}
	return x, nil
}

type OptimizationTest_NewResultClient interface {
	Send(*Oneof) error
	CloseAndRecv() (*ReturnType, error)
	grpc.ClientStream
}

type optimizationTestNewResultClient struct {
	grpc.ClientStream
}

func (x *optimizationTestNewResultClient) Send(m *Oneof) error {
	return x.ClientStream.SendMsg(m)
}

func (x *optimizationTestNewResultClient) CloseAndRecv() (*ReturnType, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ReturnType)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *optimizationTestClient) GetResults(ctx context.Context, in *AskDummy, opts ...grpc.CallOption) (OptimizationTest_GetResultsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_OptimizationTest_serviceDesc.Streams[1], c.cc, "/protomessage.OptimizationTest/GetResults", opts...)
	if err != nil {
		return nil, err
	}
	x := &optimizationTestGetResultsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OptimizationTest_GetResultsClient interface {
	Recv() (*TBResults, error)
	grpc.ClientStream
}

type optimizationTestGetResultsClient struct {
	grpc.ClientStream
}

func (x *optimizationTestGetResultsClient) Recv() (*TBResults, error) {
	m := new(TBResults)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *optimizationTestClient) GetHistory(ctx context.Context, opts ...grpc.CallOption) (OptimizationTest_GetHistoryClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_OptimizationTest_serviceDesc.Streams[2], c.cc, "/protomessage.OptimizationTest/GetHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &optimizationTestGetHistoryClient{stream}
	return x, nil
}

type OptimizationTest_GetHistoryClient interface {
	Send(*AskHistory) error
	Recv() (*HistoryPage, error)
	grpc.ClientStream
}

type optimizationTestGetHistoryClient struct {
	grpc.ClientStream
}

func (x *optimizationTestGetHistoryClient) Send(m *AskHistory) error {
	return x.ClientStream.SendMsg(m)
}

func (x *optimizationTestGetHistoryClient) Recv() (*HistoryPage, error) {
	m := new(HistoryPage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for OptimizationTest service

type OptimizationTestServer interface {
	NewResult(OptimizationTest_NewResultServer) error
	GetResults(*AskDummy, OptimizationTest_GetResultsServer) error
	GetHistory(OptimizationTest_GetHistoryServer) error
}

func RegisterOptimizationTestServer(s *grpc.Server, srv OptimizationTestServer) {
	s.RegisterService(&_OptimizationTest_serviceDesc, srv)
}

func _OptimizationTest_NewResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OptimizationTestServer).NewResult(&optimizationTestNewResultServer{stream})
}

type OptimizationTest_NewResultServer interface {
	SendAndClose(*ReturnType) error
	Recv() (*Oneof, error)
	grpc.ServerStream
}

type optimizationTestNewResultServer struct {
	grpc.ServerStream
}

func (x *optimizationTestNewResultServer) SendAndClose(m *ReturnType) error {
	return x.ServerStream.SendMsg(m)
}

func (x *optimizationTestNewResultServer) Recv() (*Oneof, error) {
	m := new(Oneof)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OptimizationTest_GetResults_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AskDummy)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OptimizationTestServer).GetResults(m, &optimizationTestGetResultsServer{stream})
}

type OptimizationTest_GetResultsServer interface {
	Send(*TBResults) error
	grpc.ServerStream
}

type optimizationTestGetResultsServer struct {
	grpc.ServerStream
}

func (x *optimizationTestGetResultsServer) Send(m *TBResults) error {
	return x.ServerStream.SendMsg(m)
}

func _OptimizationTest_GetHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OptimizationTestServer).GetHistory(&optimizationTestGetHistoryServer{stream})
}

type OptimizationTest_GetHistoryServer interface {
	Send(*HistoryPage) error
	Recv() (*AskHistory, error)
	grpc.ServerStream
}

type optimizationTestGetHistoryServer struct {
	grpc.ServerStream
}

func (x *optimizationTestGetHistoryServer) Send(m *HistoryPage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *optimizationTestGetHistoryServer) Recv() (*AskHistory, error) {
	m := new(AskHistory)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OptimizationTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protomessage.OptimizationTest",
	HandlerType: (*OptimizationTestServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NewResult",
			Handler:       _OptimizationTest_NewResult_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetResults",
			Handler:       _OptimizationTest_GetResults_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetHistory",
			Handler:       _OptimizationTest_GetHistory_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protomessage.proto",
}

func init() { proto.RegisterFile("protomessage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xee, 0x26, 0x76, 0x62, 0x4f, 0x72, 0x78, 0xdf, 0x69, 0x05, 0x26, 0x08, 0x11, 0x7c, 0xca,
	0x85, 0x10, 0x85, 0x1b, 0x12, 0x48, 0x29, 0x55, 0x3f, 0x2e, 0x6d, 0x65, 0xe5, 0x1e, 0x39, 0xf5,
	0x36, 0xb2, 0x8a, 0xbd, 0x91, 0x77, 0x2d, 0x12, 0xfe, 0x11, 0x37, 0x7e, 0x11, 0xbf, 0x05, 0xed,
	0x78, 0x37, 0xb1, 0x43, 0x40, 0xdc, 0x76, 0xe6, 0x99, 0x79, 0x9e, 0xf1, 0x7c, 0x18, 0x70, 0x5d,
	0x08, 0x25, 0x32, 0x2e, 0x65, 0xbc, 0xe2, 0x63, 0x32, 0xb0, 0x5f, 0xf7, 0x85, 0xdf, 0x19, 0xb8,
	0x77, 0x39, 0x17, 0x8f, 0x38, 0x85, 0x4e, 0xc1, 0x65, 0xf9, 0x45, 0x05, 0x6c, 0xc8, 0x46, 0xbd,
	0x69, 0x30, 0x6e, 0x24, 0x47, 0x84, 0xcd, 0xb7, 0x6b, 0x7e, 0x7d, 0x12, 0x99, 0x48, 0x7c, 0x07,
	0x6e, 0xbc, 0xe2, 0xb9, 0x0a, 0x5a, 0x94, 0xf2, 0xbc, 0x99, 0x32, 0xd3, 0x90, 0xc9, 0xa8, 0xe2,
	0x2a, 0x11, 0x55, 0x16, 0x79, 0xd0, 0x3e, 0x2e, 0xa2, 0xb1, 0xbd, 0x88, 0xb6, 0xce, 0xbb, 0xe0,
	0x96, 0x79, 0x2a, 0xf2, 0x10, 0xc0, 0x9b, 0xc9, 0xa7, 0x8b, 0x32, 0xcb, 0xb6, 0xe1, 0x8f, 0x16,
	0xf8, 0xf3, 0xf3, 0xaa, 0x28, 0x89, 0xaf, 0x00, 0xaa, 0x8a, 0xe4, 0x22, 0x4d, 0xa8, 0x7e, 0x27,
	0xf2, 0x8d, 0xe7, 0x26, 0xc1, 0x31, 0x9c, 0x2a, 0x2e, 0xd5, 0xe2, 0xb1, 0xcc, 0x1f, 0x54, 0x2a,
	0x72, 0xb9, 0xc8, 0xe3, 0x8c, 0x53, 0xd1, 0x7e, 0xf4, 0xbf, 0x86, 0x2e, 0x2d, 0x72, 0x1b, 0x67,
	0xfc, 0x48, 0xfc, 0x83, 0x48, 0x38, 0x95, 0x7c, 0x18, 0xff, 0x59, 0x24, 0x1c, 0x27, 0x70, 0x66,
	0xe5, 0xe9, 0x33, 0x17, 0x71, 0x26, 0xca, 0x5c, 0x05, 0x0e, 0x15, 0x82, 0x06, 0xa3, 0x76, 0xcc,
	0x08, 0xc1, 0x37, 0xd0, 0x5f, 0x92, 0x42, 0xaa, 0x72, 0x2e, 0x65, 0xe0, 0x0e, 0xd9, 0x88, 0x45,
	0x3d, 0xed, 0xbb, 0xac, 0x5c, 0x78, 0x06, 0xae, 0x54, 0x7c, 0x2d, 0x83, 0x0e, 0xb1, 0x54, 0x06,
	0x06, 0xd0, 0x5d, 0x8a, 0x22, 0xe1, 0x85, 0x0c, 0xba, 0x54, 0x8e, 0x35, 0xf1, 0x35, 0xf4, 0x2a,
	0xa1, 0x45, 0x12, 0x2b, 0x1e, 0x78, 0x84, 0x9a, 0xb6, 0x5c, 0xc4, 0x8a, 0x87, 0x1f, 0x01, 0x66,
	0xf2, 0xe9, 0x3a, 0x95, 0x4a, 0x14, 0x5b, 0x7c, 0x09, 0xa6, 0x41, 0xfb, 0x8e, 0x79, 0x95, 0xe3,
	0x26, 0x41, 0x04, 0x47, 0xcb, 0x51, 0x87, 0xda, 0x11, 0xbd, 0xc3, 0x7b, 0xe8, 0x99, 0xdc, 0xfb,
	0x78, 0xc5, 0xf1, 0xad, 0x1d, 0x3d, 0x1b, 0xb6, 0xff, 0x32, 0x7a, 0x3b, 0xf8, 0x3a, 0xa3, 0x63,
	0x18, 0xd7, 0xd0, 0xfd, 0xa7, 0x6a, 0xfa, 0xc0, 0x36, 0x94, 0xc8, 0x22, 0xb6, 0xd1, 0xd6, 0x96,
	0x46, 0xc1, 0x22, 0xb6, 0xd5, 0xfd, 0xb0, 0x3d, 0x74, 0xc8, 0x67, 0xcd, 0x9d, 0xa2, 0x5b, 0x53,
	0x4c, 0xc1, 0xdf, 0x55, 0x56, 0xd1, 0xb2, 0x06, 0x6d, 0xeb, 0x08, 0x6d, 0xfb, 0x38, 0xad, 0xb3,
	0xa7, 0xd5, 0x3e, 0x3d, 0x39, 0x92, 0xf2, 0x22, 0x7a, 0x87, 0x1b, 0x80, 0xfd, 0xc9, 0xe0, 0x00,
	0x3c, 0xbb, 0x36, 0x24, 0xe9, 0x47, 0x3b, 0x1b, 0x87, 0xd0, 0x8b, 0xf7, 0xab, 0x61, 0x3a, 0x54,
	0x77, 0x69, 0xfe, 0xda, 0x02, 0xd2, 0xbb, 0xbe, 0x08, 0x4e, 0x63, 0x11, 0xc2, 0x0f, 0x5a, 0xd9,
	0xde, 0x91, 0xce, 0x5d, 0x09, 0x51, 0x35, 0xd5, 0x8b, 0xe8, 0xad, 0x73, 0xcd, 0xa0, 0xcc, 0x0d,
	0x58, 0x73, 0xfa, 0x93, 0xc1, 0x7f, 0x77, 0x6b, 0x95, 0x66, 0xe9, 0xb7, 0x58, 0xef, 0xf7, 0x9c,
	0x4b, 0x85, 0x9f, 0xc0, 0xbf, 0xe5, 0x5f, 0xab, 0xaf, 0xc1, 0xd3, 0xe6, 0xa0, 0xe9, 0xdf, 0x31,
	0xf8, 0xe3, 0x19, 0x87, 0x27, 0x23, 0x86, 0x33, 0x80, 0x2b, 0xae, 0xec, 0xad, 0x3e, 0x3b, 0xd8,
	0x14, 0x73, 0xd1, 0x83, 0x83, 0x0d, 0xda, 0x1d, 0x77, 0x78, 0x32, 0x61, 0x78, 0x45, 0x14, 0x76,
	0x5b, 0x82, 0xdf, 0x28, 0x0c, 0x32, 0x78, 0xd1, 0x44, 0x6a, 0x0b, 0xab, 0x2b, 0x99, 0xb0, 0x65,
	0x87, 0xf0, 0xf7, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x93, 0xd6, 0x74, 0xf8, 0x1a, 0x05, 0x00,
	0x00,
}
