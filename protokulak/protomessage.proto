syntax = "proto3";

package protomessage;

service OptimizationTest{
    rpc NewResult(stream Oneof) returns (ReturnType) {}
    rpc GetResults(AskDummy) returns (stream TBResults) {}
    rpc GetHistory(stream AskHistory) returns (stream HistoryPage) {}
}

message Oneof{
    oneof union{
        ResultType result = 1;
        AgentType agent = 2;
        ReturnType return = 3;
    }
}



message AskDummy{
//    string query = 1;
}
message TBResults{
    uint64 results_id = 1;
	string test_functions_name = 2;
	string test_functions_code = 3;
    uint64 results_agent_amount = 4;
    double best_fitness = 5;
    uint64 steps = 6;
    string borders = 7;
    string result_date = 8;
}

message AskHistory{
    uint64 result_id = 1;
    int64 step = 2;
}
message HistoryPage{
    repeated AgentType agent = 1;
    uint64 step = 2;
}
message History{
    uint64 result_id = 1;
	double x = 2;
    double y = 3;
    double fitness = 4;
    uint64 step = 5;
}

message AgentType{
    double x = 1;
    double y = 2;
    double fitness = 3;
    uint64 step = 4;
    bool best = 5;
}
message ResultType{
    string testFunc = 1;
    uint64 agentAmount = 2;
    string code = 3;
    string borders = 4;
}
message ReturnType{
    bool good = 1;
    string message = 2;
}